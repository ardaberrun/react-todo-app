{"version":3,"sources":["reducer/reducer.js","context/TodoContext.js","helper/useLocalStorage.js","components/Header.js","components/TaskItem.js","components/TaskList.js","App.js","index.js"],"names":["reducer","state","action","type","payload","length","id","Date","now","name","complete","alert","filter","item","map","TodoContext","createContext","INITIAL_STATE","TodoProvider","children","key","initialValue","useState","control","localStorage","getItem","JSON","parse","storage","updateStorage","value","setItem","stringify","useLocalStorage","setStorage","useReducer","dispatch","active","setActive","useEffect","Provider","Header","date","context","useContext","todoName","setTodoName","className","placeholder","onChange","e","target","onKeyDown","keyCode","onClick","TaskItem","toggle","remove","TaskList","todo","App","moment","format","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d7de5017.chunk.js","sourcesContent":["export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"ADD_TODO\":\r\n          if(action.payload.length >= 3){\r\n              return  [...state, { id: Date.now(), name: action.payload, complete: false }]\r\n          }else{\r\n              alert(\"Your task must be greater than 3 letters\");\r\n              return state;\r\n          }\r\n  \r\n      case \"REMOVE_TODO\":\r\n        return state.filter((item) => item.id !== action.payload);\r\n  \r\n      case \"TOGGLE_TODO\":\r\n        return state.map((item) =>\r\n          item.id === action.payload\r\n            ? { ...item, complete: !item.complete }\r\n            : item\r\n        );\r\n  \r\n      // case \"INCOMPLETE_LENGTH\":\r\n      //      return state.filter((todo) => !todo.complete);\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import React, { createContext, useState, useEffect, useReducer } from \"react\";\r\nimport { useLocalStorage } from \"../helper/useLocalStorage\";\r\nimport { reducer } from \"../reducer/reducer\";\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nexport default function TodoProvider({ children }) {\r\n  const [storage, setStorage] = useLocalStorage(\"todos\", INITIAL_STATE);\r\n  const [state, dispatch] = useReducer(reducer, storage);\r\n  const [active, setActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setStorage(state);\r\n  }, [state]);\r\n\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        active,\r\n        setActive,\r\n        state,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n","// custom hook\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport const useLocalStorage = (key, initialValue) => {\r\n  const [storage, updateStorage] = useState(() => {\r\n    const control = localStorage.getItem(key);\r\n    return control ? JSON.parse(control) : initialValue;\r\n  });\r\n\r\n  const setStorage = (value) => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n    updateStorage(value);\r\n  };\r\n\r\n  return [storage, setStorage];\r\n};","import React, { useState, useContext } from \"react\";\r\nimport \"../styles.css\";\r\nimport { TodoContext } from \"../context/TodoContext\";\r\n\r\nconst Header = ({ date }) => {\r\n  const context = useContext(TodoContext);\r\n  const [todoName, setTodoName] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    //context.addTodo(todoName);\r\n    setTodoName(\"\");\r\n    context.dispatch({ type: \"ADD_TODO\", payload: todoName });\r\n  };\r\n\r\n  const handlePress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      setTodoName(\"\");\r\n      context.dispatch({ type: \"ADD_TODO\", payload: todoName });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mt-3 p-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 col-sm-12\">\r\n            <h4>{date}</h4>\r\n            <p className=\"blue\">\r\n              {context.state.filter((item) => !item.complete).length} Active\r\n              Tasks{\" \"}\r\n            </p>\r\n            <input\r\n              className=\"header-input\"\r\n              type=\"text\"\r\n              placeholder=\"Enter a task\"\r\n              value={todoName}\r\n              onChange={(e) => setTodoName(e.target.value)}\r\n              onKeyDown={handlePress}\r\n            />\r\n            <button onClick={handleClick} className=\"header-button\">\r\n              Add Task\r\n            </button>\r\n          </div>\r\n          <div className=\"col-lg-4 col-sm-12 d-flex navx\">\r\n            <p\r\n              onClick={() => context.setActive(false)}\r\n              className={`${context.active ? \"disabled\" : \"\"}`}\r\n            >\r\n              Incomplete Tasks\r\n            </p>\r\n            <p\r\n              onClick={() => context.setActive(true)}\r\n              className={`ml-5 ${!context.active ? \"disabled\" : \"\"}`}\r\n            >\r\n              Completed Tasks\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { FaRegTrashAlt, FaCheckCircle} from \"react-icons/fa\";\r\nimport { VscDebugRestart } from \"react-icons/vsc\";\r\nimport \"../styles.css\";\r\n\r\nfunction TaskItem({ name, complete, toggle,remove }) {\r\n  return (\r\n    <li className=\"task-list-item \">\r\n      {complete === false ? (\r\n        <FaCheckCircle onClick={toggle} className=\"check-icon\" />\r\n      ) : (\r\n        <VscDebugRestart onClick={toggle} className=\"restart-icon\" />\r\n      )}\r\n      {name}\r\n      <FaRegTrashAlt onClick={remove} className=\"trash-icon\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { useContext } from \"react\";\r\nimport \"../styles.css\";\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst TaskList = () => {\r\n  const context = useContext(TodoContext);\r\n  //console.log(context);\r\n\r\n  return (\r\n    <div className=\"container p-3\">\r\n      <ul className=\"task-list\">\r\n        {context.state.filter((item) => !item.complete).length === 0 &&\r\n        !context.active ? (\r\n          <li className=\"task-list-item\">\r\n            You currently have <span className=\"blue\">0</span> tasks. Add a task\r\n            to get started!\r\n          </li>\r\n        ) : !context.active ? (\r\n          context.state.map(\r\n            (todo) =>\r\n              !todo.complete && (\r\n                <TaskItem\r\n                  key={todo.id}\r\n                  name={todo.name}\r\n                  complete={false}\r\n                  toggle={() =>\r\n                    context.dispatch({ type: \"TOGGLE_TODO\", payload: todo.id })\r\n                  }\r\n                  remove={() =>\r\n                    context.dispatch({ type: \"REMOVE_TODO\", payload: todo.id })\r\n                  }\r\n                />\r\n              )\r\n          )\r\n        ) : (\r\n          context.state.map(\r\n            (todo) =>\r\n              todo.complete && (\r\n                <TaskItem\r\n                  key={todo.id}\r\n                  name={todo.name}\r\n                  complete={true}\r\n                  toggle={() =>\r\n                    context.dispatch({ type: \"TOGGLE_TODO\", payload: todo.id })\r\n                  }\r\n                  remove={() =>\r\n                    context.dispatch({ type: \"REMOVE_TODO\", payload: todo.id })\r\n                  }\r\n                />\r\n              )\r\n          )\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList; \r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport moment from \"moment\";\r\nimport TodoProvider from \"./context/TodoContext\";\r\n\r\nexport default function App() {\r\n  const date = moment().format(\"dddd, MMMM DD\");\r\n\r\n  return (\r\n    <TodoProvider>\r\n      <div className=\"container main shadow p-3 rounded\">\r\n        <Header date={date} />\r\n        <TaskList />\r\n      </div>\r\n    </TodoProvider>\r\n  );\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport bootstrap from \"bootstrap\"; // eslint-disable-line no-unused-vars\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);"],"sourceRoot":""}